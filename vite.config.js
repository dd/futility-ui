import vue from '@vitejs/plugin-vue';
import { defineConfig } from 'vite';
import { fileURLToPath, URL } from 'node:url';
import { resolve } from 'path';
import VitePluginSvgSpritemap from '@spiriit/vite-plugin-svg-spritemap';
import { version } from './package.json';


/**
 * Vite plugin that fixes the import of a virtual SVG spritemap generated by @spiriit/vite-plugin-svg-spritemap.
 *
 * In development mode, it provides a virtual empty module for `./__spritemap`
 * so that Vite doesn't throw an error due to the missing file.
 *
 * In build mode, it rewrites legacy import paths like './components/FIcon/assets/sprite.svg'
 * (left over from the source structure) to the final path './assets/sprite.svg',
 * which should match the one declared in package.json exports.
 */
function FixSpriteImport() {
	const RAW_ID = './__spritemap';
	const VIRTUAL_ID = '\0virtual:__spritemap';

	return {
		name: 'fix-sprite-import',

		resolveId(source) {
			if (source === RAW_ID) {
				// Treat './__spritemap' as a virtual module to prevent Vite from trying to resolve it from disk
				return VIRTUAL_ID;
			}
			return null;
		},

		load(id) {
			if (id === VIRTUAL_ID) {
				// Provide an empty module export during dev mode
				return 'export default "";';
			}
			return null;
		},

		generateBundle(_, bundle) {
			for (const chunk of Object.values(bundle)) {
				if (chunk.type === 'chunk' && chunk.code.includes('./components/FIcon/assets/sprite.svg')) {
					// Replace the legacy path left from the original source structure
					chunk.code = chunk.code.replaceAll(
						'./components/FIcon/assets/sprite.svg',
						'./assets/sprite.svg'
					);
				}
			}
		},
	};
}


export default defineConfig({
	base: process.env.BASE_URL || '/',
	plugins: [
		vue(),
		VitePluginSvgSpritemap(
			'./src/components/FIcon/icons/*.svg',
			{
				output: {
					name: 'sprite.svg',
					filename: 'sprite[extname]',
					use: false,
					view: false,
				},
				prefix: 'ficon-',
			},
		),
		FixSpriteImport(),
	],
	define: {
		__VERSION__: JSON.stringify(version),
	},
	build: {
		lib: {
			name: 'Futility UI',
			entry: {
				index: resolve(__dirname, 'src/index.js'),
				FLoader: resolve(__dirname, 'src/components/FLoader/index.vue'),
				FIcon: resolve(__dirname, 'src/components/FIcon/index.vue'),
				styles: resolve(__dirname, 'src/styles.sass'),
				theme: resolve(__dirname, 'src/theme.sass'),
			},
			fileName: (format, entryName) =>`${entryName}.${format}.js`,
			formats: [ 'es', 'cjs' ],
		},
		rollupOptions: {
			external: [
				'vue',
				'./assets/sprite.svg',
			],
			output: {
				globals: {
					vue: 'Vue',
				},
				assetFileNames: (assetInfo) => {
					if (assetInfo.name.endsWith('.css')) {
						return 'styles/[name][extname]';
					}

					return 'assets/[name][extname]';
				},
			},
		},
		cssCodeSplit: true,
		treeShaking: true,
	},
	server: {
		fs: {
			allow: ['.storybook'],
		},
	},
	resolve: {
		extensions: ['.mjs', '.js', '.mts', '.ts', '.jsx', '.tsx', '.json', '.vue', '.mdx', '.less', '.scss', '.sass' ],
		alias: {
			'@': fileURLToPath(new URL('./src', import.meta.url)),
		},
	},
});
